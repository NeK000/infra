services:
  teslamate:
    image: teslamate/teslamate:latest
    container_name: teslamate
    restart: always
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "teslamate"
      traefik.enable: true
      traefik.http.routers.container-x.rule: Host(`teslamate.proxy.internal`)
      traefik.http.routers.container-x.entrypoints: web
      traefik.http.services.container-x.loadbalancer.server.port: {{ teslamate_port }}
    volumes:
      - "{{ appdata_path }}/teslamate/./import:/opt/app/import"
    ports:
      - {{ teslamate_port }}:{{ teslamate_port }}
    environment:
      ENCRYPTION_KEY: "{{ TESLAMATE_ENCRYPTION_KEY }}"
      DATABASE_USER: "{{ PG_USER }}"
      DATABASE_PASS: "{{ PG_PASS }}"
      DATABASE_NAME: "{{ PG_DB_TESLAMATE }}"
      DATABASE_HOST: "{{ PG_HOST }}"
      MQTT_HOST: "{{ MQTT_HOST }}"
      MQTT_USERNAME: "{{ MQTT_USERNAME }}"
      MQTT_PASSWORD: "{{ MQTT_PASSWORD }}"
      PORT: {{ teslamate_port }}
    cap_drop:
      - all
  grafana:
    image: teslamate/grafana:latest
    container_name: teslamate-grafana
    restart: always
    environment:
      PUID: 472
      PGID: 472
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "teslamate-grafana"
      tsdproxy.container_port: {{ teslamate_grafana_port }}
    volumes:
      - "{{ appdata_path }}/teslamate/grafana-data:/var/lib/grafana"
    ports:
      - {{ teslamate_grafana_port }}:3000
    environment:
      DATABASE_USER: "{{ PG_USER }}"
      DATABASE_PASS: "{{ PG_PASS }}"
      DATABASE_NAME: "{{ PG_DB_TESLAMATE }}"
      DATABASE_HOST: "{{ PG_HOST }}"
  ABRP:
    container_name: TeslaMate_ABRP
    image: fetzu/teslamate-abrp:latest
    restart: always
    environment:
      MQTT_SERVER: "{{ MQTT_HOST }}"
      MQTT_USERNAME: "{{ MQTT_USERNAME }}"
      MQTT_PASSWORD: "{{ MQTT_PASSWORD }}"
      USER_TOKEN: "{{ TESLAMATE_ABRP_KEY }}"
      CAR_NUMBER: 1
      CAR_MODEL: "{{ TESLAMATE_ABRP_CAR_MODEL }}"